import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
	 static int NumberOfPairs(int[] a, long k) {
	        Map<Integer, List<Integer>> numMap = new HashMap<>();
	        Set<String> pairSet = new HashSet<>();
	        int count = 0;
	        for (int i = 0 ; i< a.length ; i++) {
	            if (numMap.containsKey(a[i])) {
	                List<Integer> data = numMap.get(a[i]);
	                data.add(i);
	                numMap.put(a[i], data);
	            } else {
	                List<Integer> value = new ArrayList<>();
	                value.add(i);
	                numMap.put(a[i], value);
	            }
	        }
	        
	        for (int j = 0 ; j< a.length ; j++) {
	            long key = k - a[j];
	            if (numMap.containsKey(key) && !pairSet.contains(key)) {
	                ++count;
	                List<Integer> locs = new ArrayList<>();
	                for (Integer m : locs) {
	                    pairSet.add(j+""+m);
	                    pairSet.add(m+""+j);
	                }
	                
	            }
	        }
	        return count;
	    }

	 public static void main(String[] args) throws IOException{
	        Scanner in = new Scanner(System.in);
	        final String fileName = System.getenv("OUTPUT_PATH");
	        BufferedWriter bw = new BufferedWriter(new FileWriter(fileName));
	        int res;
	        
	        int _a_size = 0;
	        _a_size = Integer.parseInt(in.nextLine().trim());
	        int[] _a = new int[_a_size];
	        int _a_item;
	        for(int _a_i = 0; _a_i < _a_size; _a_i++) {
	            _a_item = Integer.parseInt(in.nextLine().trim());
	            _a[_a_i] = _a_item;
	        }
	        
	        long _k;
	        _k = Long.parseLong(in.nextLine().trim());
	        
	        res = NumberOfPairs(_a, _k);
	        bw.write(String.valueOf(res));
	        bw.newLine();
	        
	        bw.close();
	    }
	}